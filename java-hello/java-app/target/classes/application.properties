# Puerto del backend
# server.port=8080
server.port=${PORT:8080}


# OIDC Configuration
# spring.security.oauth2.client.registration.duende.client-id=java-client
# # spring.security.oauth2.client.registration.duende.client-secret=java-secret
# spring.security.oauth2.client.registration.duende.authorization-grant-type=authorization_code
# spring.security.oauth2.client.registration.duende.scope=openid,profile,email
# spring.security.oauth2.client.provider.duende.issuer-uri=http://host.docker.internal:5000
# spring.security.oauth2.client.registration.duende.redirect-uri=http://host.docker.internal:8080/login/oauth2/code/duende
# spring.security.oauth2.client.registration.duende.client-name=Duende
# spring.security.oauth2.client.provider.duende.user-name-attribute=preferred_username

# spring.security.oauth2.client.registration.duende.redirect-uri=http://host.docker.internal:8080/login/oauth2/code/duende
# spring.security.oauth2.client.registration.duende.client-secret=secret
# spring.security.oauth2.client.provider.duende.user-name-attribute=preferred_username


# Habilita cookie de sesi√≥n compatible
server.servlet.session.cookie.name=JSESSIONID
server.servlet.session.cookie.path=/
server.servlet.session.cookie.http-only=true
server.servlet.session.cookie.secure=false
server.servlet.session.cookie.same-site=LAX

# Logging para trazar cookies y requests
# logging.level.org.springframework.security.web.savedrequest=DEBUG
# logging.level.org.springframework.security.oauth2.client=DEBUG
# logging.level.org.springframework.security.oauth2.core=DEBUG
# logging.level.org.springframework.security.oauth2.client.endpoint=DEBUG
# logging.level.org.springframework.security.oauth2.client.web=DEBUG
# logging.level.org.springframework.security.oauth2.client.registration=DEBUG
# logging.level.org.springframework.security.oauth2.client.userinfo=DEBUG
# logging.level.org.springframework.security.oauth2.jwt=DEBUG
# logging.level.org.springframework.security=DEBUG
# logging.level.org.springframework.web=DEBUG
# logging.level.web=DEBUG